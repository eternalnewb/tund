#!/usr/bin/env ruby

require 'psych'
opts = Psych.load_file("/etc/tund/tundconf.yaml")

$ssh_bin = opts['SSHconfiguration']['Bin']
$ssh_id = opts['SSHconfiguration']['ID']
$ssh_opts = opts['SSHconfiguration']['Opts']
$ssh_reco_inter = opts['SSHconfiguration']['ReconnectInterval']
$ssh_port = opts['SSHconfiguration']['SSHport']
$ssh_user = opts['SSHconfiguration']['Username']
$ssh_host = opts['SSHconfiguration']['Hostname']
$tunnel_ports = opts['Tunnel']['TunnelPorts']

$tunnel_strings = []
$tunnel_ports.each do |entry|
  $tunnel_strings << [entry.split(',')[0], ":localhost:", entry.split(',')[1]].join('')
end
$tunnel_strings.join(' ')

class Tunneler

  def run
    begin
      tunnel
    rescue => e
      puts e
      puts e.backtrace.join("\n")
    ensure
      sleep $ssh_reco_inter[0].to_i
    end
  end

  # Opens the SSH tunnel
  def tunnel
    system $ssh_bin,
      $ssh_opts,
      '-p', $ssh_port,
      '-i', $ssh_id,
      '-R', $tunnel_strings,
      "#{$ssh_user[0]}@#{$ssh_host[0]}"].join(" ")

#     print [$ssh_bin, # for debuggin'
#       $ssh_opts,
#       '-p', $ssh_port,
#       '-i', $ssh_id,
#       '-R', $tunnel_strings,
#       "#{$ssh_user[0]}@#{$ssh_host[0]}"].join(" ")
  end
end

if $0 == __FILE__
  Tunneler.new.run
end
